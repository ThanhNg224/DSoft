plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // Flutter plugin phải đứng sau Android & Kotlin plugin
    id 'dev.flutter.flutter-gradle-plugin'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    // ✅ Groovy KHÔNG dùng dấu '='
    namespace "info.dsoft.app"
    compileSdk 35
    ndkVersion "29.0.13113456"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId "info.dsoft.app"
        minSdk flutter.minSdkVersion
        targetSdk flutter.targetSdkVersion
        versionCode flutter.versionCode
        versionName flutter.versionName
        multiDexEnabled true
    }

    // ✅ Thêm x86_64 để build chạy được trên emulator
    splits {
        abi {
            enable false
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            universalApk false
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            // Nếu muốn debug nhanh trên emulator có thể tắt split:
            // splits.abi.enable = false
        }
        release {
            // Nếu chưa có key.properties thì dùng debug keystore tạm:
            signingConfig keystorePropertiesFile.exists() ? signingConfigs.release : signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source "../.."
}